name: Manual Release Workflow

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number'
        required: true
      draft:
        description: 'Whether to create the release as a draft'
        required: false
        default: false
      prerelease:
        description: 'Whether to mark the release as a prerelease'
        required: false
        default: false

jobs:

  build_and_release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Update mod_version in gradle.properties
      run: sed -i "s/^mod_version=.*/mod_version=${{ inputs.version }}/" ./gradle.properties
    - name: Commit changes
      run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@users.noreply.github.com'
          git commit -am "Update Gradle version to ${{ inputs.version }}"
          git push
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'zulu' # Alternative distribution options are available
    
    - name: Cache SonarCloud packages
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle
    
    - name: Set permission
      run: chmod +x ./gradlew

    - name: Use Gradle 8.3
      run: ./gradlew wrapper --gradle-version 8.3

    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to create releases
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}    # Needed for Sonar analysis
      run: |
        ./gradlew build sonar --stacktrace

    - name: Publish 
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        CURSEFORGE: ${{ secrets.CURSEFORGE_TOKEN }}
        MODRINTH: ${{ secrets.MODRINTH_TOKEN }}
      run: |
        ./gradlew publish --stacktrace
     
